for (i in 1:nrow(granularity_music_negative)){
granularity_music_negative$ICC[i] = icc(granularity_music_negative[i,])
}
# install.packages("irr")
library(irr)
# calculate ICC for each positive or negative term
# icc(granularity_music_negative
granularity_music_negative$ICC <- NA
i <- 1:length(granularity_music_negative)
for (i in 1:nrow(granularity_music_negative)){
granularity_music_negative$ICC[i] = icc(granularity_music_negative[i,])
}
i <- 1:length(granularity_music_negative)
for (i in 1:nrow(granularity_music_negative)){
granularity_music_negative$ICC[i] = icc(granularity_music_negative[i,])
}
install.packages("psych")
# install.packages("psych")
library(psych)
ICC(granularity_music_negative)
granularity_music_negative[2]
granularity_music_negative[,2]
granularity_music_negative[2,]
library(tidyverse)
data <- read.csv("../data/pilot data/Dev Stress Task Norming_February 12, 2024_13.43 - Dev Stress Task Norming_February 5, 2024_13.43.csv") # %>%
# select("Q2","X54_anger_1":"self.reportattention")
granularity_data <- data %>%
select("X54_anger_1":"pos3_satisfied_1")
granularity_pic <- granularity_data %>%
select("X54_anger_1":"X1710_satisfied_1")
granularity_music <- granularity_data %>%
select("pos2_anger_1":"pos3_satisfied_1")
granularity_pic_negative <- granularity_pic %>%
select(ends_with("anger_1") | ends_with("disgust_1") | ends_with("sadness_1") | ends_with("scared_1") | ends_with("upset_1"))
granularity_pic_positive <- granularity_pic %>%
select(ends_with("happiness_1") | ends_with("pride_1") | ends_with("excitement_1") | ends_with("joy_1") | ends_with("satisfied_1"))
granularity_music_negative <- granularity_music %>%
select(ends_with("anger_1") | ends_with("disgust_1") | ends_with("sadness_1") | ends_with("scared_1") | ends_with("upset_1") )
granularity_music_positive <- granularity_music %>%
select(ends_with("happiness_1") | ends_with("pride_1") | ends_with("excitement_1") | ends_with("joy_1") | ends_with("satisfied_1"))
##NICK 2/20 edits. this will be code to use for negative emotions in response to both music + pics
anger <-
data %>%
select(ends_with("anger_1") | Q2) %>%
pivot_longer(!Q2, values_to="anger") %>%
select(-c( "name"))
disgust <-
data %>%
select(ends_with("disgust_1") | Q2) %>%
pivot_longer(!Q2,values_to="disgust") %>%
select(-c("Q2","name"))
sadness <-
data %>%
select(ends_with("sadness_1") | Q2) %>%
pivot_longer(!Q2,values_to = "sadness") %>%
select(-c("Q2","name"))
scared <-
data %>%
select(ends_with("scared_1") | Q2) %>%
pivot_longer(!Q2, values_to="scared") %>%
select(-c("Q2","name"))
upset <-
data %>%
select(ends_with("upset_1") | Q2) %>%
pivot_longer(!Q2, values_to="upset") %>%
select(-c("Q2","name"))
master_negative <- cbind(anger, disgust, sadness,scared,upset)
#to get a single score:
master_negative %>%
subset(Q2=="62fc6762d2d8e46c4e75b469") %>%
select(-c("Q2")) %>%
icc(type = "agreement", unit = "single")
View(sadness)
View(granularity_music_negative)
View(data)
library(tidyverse)
data <- read.csv("../data/pilot data/Dev Stress Task Norming_February 12, 2024_13.43 - Dev Stress Task Norming_February 5, 2024_13.43.csv") # %>%
# select("Q2","X54_anger_1":"self.reportattention")
granularity_data <- data %>%
select("X54_anger_1":"pos3_satisfied_1")
granularity_pic <- granularity_data %>%
select("X54_anger_1":"X1710_satisfied_1")
granularity_music <- granularity_data %>%
select("pos2_anger_1":"pos3_satisfied_1")
granularity_pic_negative <- granularity_pic %>%
select(ends_with("anger_1") | ends_with("disgust_1") | ends_with("sadness_1") | ends_with("scared_1") | ends_with("upset_1"))
granularity_pic_positive <- granularity_pic %>%
select(ends_with("happiness_1") | ends_with("pride_1") | ends_with("excitement_1") | ends_with("joy_1") | ends_with("satisfied_1"))
granularity_music_negative <- granularity_music %>%
select(ends_with("anger_1") | ends_with("disgust_1") | ends_with("sadness_1") | ends_with("scared_1") | ends_with("upset_1") )
granularity_music_positive <- granularity_music %>%
select(ends_with("happiness_1") | ends_with("pride_1") | ends_with("excitement_1") | ends_with("joy_1") | ends_with("satisfied_1"))
##NICK 2/20 edits. this will be code to use for negative emotions in response to both music + pics
anger <-
data %>%
select(ends_with("anger_1") | Q2) %>%
pivot_longer(!Q2, values_to="anger") %>%
select(-c( "name"))
disgust <-
data %>%
select(ends_with("disgust_1") | Q2) %>%
pivot_longer(!Q2,values_to="disgust") %>%
select(-c("Q2","name"))
sadness <-
data %>%
select(ends_with("sadness_1") | Q2) %>%
pivot_longer(!Q2,values_to = "sadness") %>%
select(-c("Q2","name"))
scared <-
data %>%
select(ends_with("scared_1") | Q2) %>%
pivot_longer(!Q2, values_to="scared") %>%
select(-c("Q2","name"))
upset <-
data %>%
select(ends_with("upset_1") | Q2) %>%
pivot_longer(!Q2, values_to="upset") %>%
select(-c("Q2","name"))
master_negative <- cbind(anger, disgust, sadness,scared,upset)
#to get a single score:
master_negative %>%
subset(Q2=="62fc6762d2d8e46c4e75b469") %>%
select(-c("Q2")) %>%
icc(type = "agreement", unit = "single")
library(tidyverse)
library(irr)
data <- read.csv("../data/pilot data/Dev Stress Task Norming_February 12, 2024_13.43 - Dev Stress Task Norming_February 5, 2024_13.43.csv") # %>%
# select("Q2","X54_anger_1":"self.reportattention")
granularity_data <- data %>%
select("X54_anger_1":"pos3_satisfied_1")
granularity_pic <- granularity_data %>%
select("X54_anger_1":"X1710_satisfied_1")
granularity_music <- granularity_data %>%
select("pos2_anger_1":"pos3_satisfied_1")
granularity_pic_negative <- granularity_pic %>%
select(ends_with("anger_1") | ends_with("disgust_1") | ends_with("sadness_1") | ends_with("scared_1") | ends_with("upset_1"))
granularity_pic_positive <- granularity_pic %>%
select(ends_with("happiness_1") | ends_with("pride_1") | ends_with("excitement_1") | ends_with("joy_1") | ends_with("satisfied_1"))
granularity_music_negative <- granularity_music %>%
select(ends_with("anger_1") | ends_with("disgust_1") | ends_with("sadness_1") | ends_with("scared_1") | ends_with("upset_1") )
granularity_music_positive <- granularity_music %>%
select(ends_with("happiness_1") | ends_with("pride_1") | ends_with("excitement_1") | ends_with("joy_1") | ends_with("satisfied_1"))
##NICK 2/20 edits. this will be code to use for negative emotions in response to both music + pics
anger <-
data %>%
select(ends_with("anger_1") | Q2) %>%
pivot_longer(!Q2, values_to="anger") %>%
select(-c( "name"))
disgust <-
data %>%
select(ends_with("disgust_1") | Q2) %>%
pivot_longer(!Q2,values_to="disgust") %>%
select(-c("Q2","name"))
sadness <-
data %>%
select(ends_with("sadness_1") | Q2) %>%
pivot_longer(!Q2,values_to = "sadness") %>%
select(-c("Q2","name"))
scared <-
data %>%
select(ends_with("scared_1") | Q2) %>%
pivot_longer(!Q2, values_to="scared") %>%
select(-c("Q2","name"))
upset <-
data %>%
select(ends_with("upset_1") | Q2) %>%
pivot_longer(!Q2, values_to="upset") %>%
select(-c("Q2","name"))
master_negative <- cbind(anger, disgust, sadness,scared,upset)
#to get a single score:
master_negative %>%
subset(Q2=="62fc6762d2d8e46c4e75b469") %>%
select(-c("Q2")) %>%
icc(type = "agreement", unit = "single")
i = 1
master_negative$ICC <- NA
while (i <= nrow(master_negative)) {
subset_data <- master_negative[i:min(i + 11, nrow(master_negative)), ]
subset_data <- subset_data[, !names(subset_data) %in% c("Q2", "ICC")]
result <- icc(subset_data, type = "agreement", unit = "single")
print(result$value)
i <- i + 12
}
happiness <-
data %>%
select(ends_with("happiness_1") | Q2) %>%
pivot_longer(!Q2, values_to="happiness") %>%
select(-c( "name"))
pride <-
data %>%
select(ends_with("pride_1") | Q2) %>%
pivot_longer(!Q2,values_to="pride") %>%
select(-c("Q2","name"))
excitement <-
data %>%
select(ends_with("excitement_1") | Q2) %>%
pivot_longer(!Q2,values_to = "excitement") %>%
select(-c("Q2","name"))
joy <-
data %>%
select(ends_with("joy_1") | Q2) %>%
pivot_longer(!Q2, values_to="joy") %>%
select(-c("Q2","name"))
satisfied <-
data %>%
select(ends_with("satisfied_1") | Q2) %>%
pivot_longer(!Q2, values_to="satisfied") %>%
select(-c("Q2","name"))
master_positive <- cbind(happiness, pride, excitement, joy, satisfied)
i = 1
master_positive$ICC <- NA
while (i <= nrow(master_positive)) {
subset_data <- master_positive[i:min(i + 11, nrow(master_positive)), ]
subset_data <- subset_data[, !names(subset_data) %in% c("Q2", "ICC")]
result <- icc(subset_data, type = "agreement", unit = "single")
print(result$value)
i <- i + 12
}
View(pride)
library(tidyverse)
library(irr)
source("reverseCode.R")
source("reverseCode.R")
data <- read.csv("../data/pilot data/Dev Stress Task Norming_February 12, 2024_13.43 - Dev Stress Task Norming_February 5, 2024_13.43.csv") # %>%
rdees <- data %>%
dplyr::select("RDEES_1_1":"RDEES_14_1")
View(rdees)
rdees <- data %>%
dplyr::select("RDEES_1_1":"RDEES_14_1")
cols_reverse <- c("RDEES_1_1","RDEES_5_1","RDEES_9_1", "RDEES_11_1")
rdees[cols_reverse] <- lapply(rdees[cols_reverse], reverseCode, min=1, max=5)
cols_range <- c("RDEES_1_1","RDEES_3_1","RDEES_5_1","RDEES_7_1", "RDEES_9_1", "RDEES_11_1", "RDEES_13_1")
cols_differentation <- c("RDEES_2_1","RDEES_4_1","RDEES_6_1","RDEES_8_1", "RDEES_10_1", "RDEES_12_1", "RDEES_14_1")
data$rdees_range <- apply(rdees[cols_range], 1,sum)
data$rdees_differentiation <- apply(rdees[cols_differentation],1, sum)
View(data)
library(tidyverse)
library(irr)
source("reverseCode.R")
data <- read.csv("../data/pilot data/Dev Stress Task Norming_February 12, 2024_13.43 - Dev Stress Task Norming_February 5, 2024_13.43.csv") # %>%
# #select("Q2","X54_anger_1":"self.reportattention")
granularity_data <- data %>%
select("Q2","X54_anger_1":"pos3_satisfied_1")
granularity_pic <- granularity_data %>%
select("Q2","X54_anger_1":"X1710_satisfied_1")
granularity_music <- granularity_data %>%
select("Q2","pos2_anger_1":"pos3_satisfied_1")
anger_music <-
granularity_music %>%
select(ends_with("anger_1") | Q2) %>%
pivot_longer(!Q2, values_to="anger") %>%
select(-c( "name"))
disgust_music <-
granularity_music %>%
select(ends_with("disgust_1") | Q2) %>%
pivot_longer(!Q2,values_to="disgust") %>%
select(-c("Q2","name"))
sadness_music <-
granularity_music %>%
select(ends_with("sadness_1") | Q2) %>%
pivot_longer(!Q2,values_to = "sadness") %>%
select(-c("Q2","name"))
scared_music <-
granularity_music %>%
select(ends_with("scared_1") | Q2) %>%
pivot_longer(!Q2, values_to="scared") %>%
select(-c("Q2","name"))
upset_music <-
granularity_music %>%
select(ends_with("upset_1") | Q2) %>%
pivot_longer(!Q2, values_to="upset") %>%
select(-c("Q2","name"))
music_negative <- cbind(anger_music, disgust_music, sadness_music,scared_music,upset_music)%>%
na.omit()
happiness_music <-
granularity_music %>%
select(ends_with("happiness_1") | Q2) %>%
pivot_longer(!Q2, values_to="happiness") %>%
select(-c( "name"))
pride_music <-
granularity_music %>%
select(ends_with("pride_1") | Q2) %>%
pivot_longer(!Q2,values_to="pride") %>%
select(-c("Q2","name"))
excitement_music <-
granularity_music %>%
select(ends_with("excitement_1") | Q2) %>%
pivot_longer(!Q2,values_to = "excitement") %>%
select(-c("Q2","name"))
joy_music <-
granularity_music %>%
select(ends_with("joy_1") | Q2) %>%
pivot_longer(!Q2, values_to="joy") %>%
select(-c("Q2","name"))
satisfied_music <-
granularity_music %>%
select(ends_with("satisfied_1") | Q2) %>%
pivot_longer(!Q2, values_to="satisfied") %>%
select(-c("Q2","name"))
music_positive <- cbind(happiness_music, pride_music, excitement_music,joy_music,satisfied_music) %>%
na.omit()
#pics negative
anger_pic <-
granularity_pic %>%
select(ends_with("anger_1") | Q2) %>%
pivot_longer(!Q2, values_to="anger") %>%
select(-c( "name"))
disgust_pic <-
granularity_pic %>%
select(ends_with("disgust_1") | Q2) %>%
pivot_longer(!Q2,values_to="disgust") %>%
select(-c("Q2","name"))
sadness_pic <-
granularity_pic %>%
select(ends_with("sadness_1") | Q2) %>%
pivot_longer(!Q2,values_to = "sadness") %>%
select(-c("Q2","name"))
scared_pic <-
granularity_pic %>%
select(ends_with("scared_1") | Q2) %>%
pivot_longer(!Q2, values_to="scared") %>%
select(-c("Q2","name"))
upset_pic <-
granularity_pic %>%
select(ends_with("upset_1") | Q2) %>%
pivot_longer(!Q2, values_to="upset") %>%
select(-c("Q2","name"))
pic_negative <- cbind(anger_pic, disgust_pic, sadness_pic,scared_pic,upset_pic) %>%
na.omit()
#pic positive
happiness_pic <-
granularity_pic %>%
select(ends_with("happiness_1") | Q2) %>%
pivot_longer(!Q2, values_to="happiness") %>%
select(-c( "name"))
pride_pic <-
granularity_pic %>%
select(ends_with("pride_1") | Q2) %>%
pivot_longer(!Q2,values_to="pride") %>%
select(-c("Q2","name"))
excitement_pic <-
granularity_pic %>%
select(ends_with("excitement_1") | Q2) %>%
pivot_longer(!Q2,values_to = "excitement") %>%
select(-c("Q2","name"))
joy_pic <-
granularity_pic %>%
select(ends_with("joy_1") | Q2) %>%
pivot_longer(!Q2, values_to="joy") %>%
select(-c("Q2","name"))
satisfied_pic <-
granularity_pic %>%
select(ends_with("satisfied_1") | Q2) %>%
pivot_longer(!Q2, values_to="satisfied") %>%
select(-c("Q2","name"))
pic_positive <- cbind(happiness_pic, pride_pic, excitement_pic,joy_pic,satisfied_pic) %>%
na.omit()
#music neg
music_negative_list <- split(music_negative, music_negative$Q2)
results <-
expand.grid(
ID = names(music_negative_list)
)
i = seq(seq_along(music_negative_list))
for(i in seq_along(music_negative_list)) {
icc_result <-  (music_negative_list[[i]]) %>%
select(-c("Q2")) %>%
icc(type = "agreement", unit = "single")
results$negmusicICC[i] = 1 - icc_result$value
}
#pos music
music_positive_list <- split(music_positive, music_positive$Q2)
i = seq(seq_along(music_positive_list))
for(i in seq_along(music_positive_list)) {
icc_result <-  (music_positive_list[[i]]) %>%
select(-c("Q2")) %>%
icc(type = "agreement", unit = "single")
results$posmusicICC[i] = 1 - icc_result$value
}
#neg pic
pic_negative_list <- split(pic_negative, pic_negative$Q2)
i = seq(seq_along(pic_negative_list))
for(i in seq_along(pic_negative_list)) {
icc_result <-  (pic_negative_list[[i]]) %>%
select(-c("Q2")) %>%
icc(type = "agreement", unit = "single")
results$negpicICC[i] = 1 - icc_result$value
}
#pos pic
pic_positive_list <- split(pic_positive, pic_positive$Q2)
i = seq(seq_along(pic_positive_list))
for(i in seq_along(pic_positive_list)) {
icc_result <-  (pic_positive_list[[i]]) %>%
select(-c("Q2")) %>%
icc(type = "agreement", unit = "single")
results$pospicICC[i] = 1 - icc_result$value
}
rdees <- data %>%
dplyr::select("RDEES_1_1":"RDEES_14_1")
cols_reverse <- c("RDEES_1_1","RDEES_5_1","RDEES_9_1", "RDEES_11_1")
rdees[cols_reverse] <- lapply(rdees[cols_reverse], reverseCode, min=1, max=5)
cols_range <- c("RDEES_1_1","RDEES_3_1","RDEES_5_1","RDEES_7_1", "RDEES_9_1", "RDEES_11_1", "RDEES_13_1")
cols_differentation <- c("RDEES_2_1","RDEES_4_1","RDEES_6_1","RDEES_8_1", "RDEES_10_1", "RDEES_12_1", "RDEES_14_1")
data$rdees_range <- apply(rdees[cols_range], 1,sum)
data$rdees_differentiation <- apply(rdees[cols_differentation],1, sum)
results$rdees_range <- apply(rdees[cols_range], 1,sum)
View(results)
merge(results, data, by="ID")
merge(results, data, by.x="ID", by.y="Q2")
test <- merge(results, data, by.x="ID", by.y="Q2")
unique(test$ID)
View(test)
duplicate(test$ID)
duplicated(test$ID)
test <- merge(results, data, by.x="ID", by.y="Q2") %>%
na.omit()
na.omit(data)
na.omit(data) %>%
merge(results,by.x="ID", by.y="Q2")
merge <- na.omit(data) %>%
merge(results,by.x="ID", by.y="Q2")
merge <- na.omit(data)
merge(results, merge,by.x="ID", by.y="Q2")
test <- merge(results, merge,by.x="ID", by.y="Q2")
cor.test(test$rdees_differentiation, test$negpicICC)
cor.test(test$rdees_differentiation, test$posmusicICC)
cor.test(test$rdees_differentiation, test$pospicICC)
cor.test(test$rdees_differentiation, test$negmusicICC)
cor.test(test$rdees_range, test$negmusicICC)
cor.test(test$rdees_range, test$posmusicICC)
cor.test(test$rdees_range, test$posmusicICC)
ggplot(data=test, aes(x=posmusicICC, y=rdees_differentiation)) +
geom_point()
data$rdees_total <- data$rdees_differentiation + data$rdees_range
merge <- na.omit(data)
test <- merge(results, merge,by.x="ID", by.y="Q2")
cor.test(test$rdees_total, test$posmusicICC)
cor.test(test$rdees_total, test$negmusicICC)
cor.test(test$rdees_total, test$negpicICC)
cor.test(test$rdees_total, test$pospicICC)
library(tidyverse)
OASIS <- read.csv(file='../stimuli/oasis/OASIS.csv')
OASIS_clean <-
OASIS %>%
dplyr::filter(Category != "Person")
OASIS_clean$Valence_SE <- OASIS_clean$Valence_SD/(sqrt(OASIS_clean$Valence_N))
OASIS_clean$Arousal_SE <- OASIS_clean$Arousal_SD/(sqrt(OASIS_clean$Arousal_N))
ggplot(data=OASIS_clean, aes(x=Arousal_mean, y=Valence_mean))+
geom_point() +
geom_vline(xintercept = 3.5, linetype="dashed", color="red") +
geom_hline(yintercept = 3.5, linetype="dashed", color="red")
OASIS_cleanpospos <-
OASIS_clean %>%
dplyr::filter(Arousal_mean - Arousal_SE > 3.5) %>%
dplyr::filter(Valence_mean - Valence_SE > 3.5)
OASIS_cleanpospos$quad <-"High Arousal, High Valence"
ggplot(data=OASIS_cleanpospos, aes(x=Arousal_mean, y=Valence_mean))+
geom_point() +
geom_vline(xintercept = 3.5, linetype="dashed", color="red") +
geom_hline(yintercept = 3.5, linetype="dashed", color="red")
OASIS_cleannegpos <-
OASIS_clean %>%
dplyr::filter(Arousal_mean + Arousal_SE < 3.5) %>%
dplyr::filter(Valence_mean - Valence_SE > 3.5)
OASIS_cleannegpos$quad <-"Low Arousal, High Valence"
ggplot(data=OASIS_cleannegpos, aes(x=Arousal_mean, y=Valence_mean))+
geom_point() +
geom_vline(xintercept = 3.5, linetype="dashed", color="red") +
geom_hline(yintercept = 3.5, linetype="dashed", color="red")
OASIS_cleannegneg <-
OASIS_clean %>%
dplyr::filter(Arousal_mean + Arousal_SE < 3.5) %>%
dplyr::filter(Valence_mean + Valence_SE < 3.5)
OASIS_cleannegneg$quad <-"Low Arousal, Low Valence"
ggplot(data=OASIS_cleannegneg, aes(x=Arousal_mean, y=Valence_mean))+
geom_point() +
geom_vline(xintercept = 3.5, linetype="dashed", color="red") +
geom_hline(yintercept = 3.5, linetype="dashed", color="red")
OASIS_cleanposneg <-
OASIS_clean %>%
dplyr::filter(Arousal_mean - Arousal_SE > 3.5) %>%
dplyr::filter(Valence_mean + Valence_SE < 3.5)
OASIS_cleanposneg$quad <-"High Arousal, Low Valence"
ggplot(data=OASIS_cleanposneg, aes(x=Arousal_mean, y=Valence_mean))+
geom_point() +
geom_vline(xintercept = 3.5, linetype="dashed", color="red") +
geom_hline(yintercept = 3.5, linetype="dashed", color="red")
stim_selection <-
rbind(OASIS_cleannegneg, OASIS_cleannegpos, OASIS_cleanposneg, OASIS_cleanpospos) %>%
dplyr::select(Theme, quad)
write.csv(file='../stimuli/OASIS_initialstims.csv', stim_selection)
filtered <- read.csv(file='../stimuli/OASIS_initialstims.csv')
updated <- merge(filtered, OASIS_clean, by="Theme") %>%
select(Theme, Arousal_mean, Arousal_SE, Valence_mean, Valence_SE)
updated_cleanpospos <-
updated %>%
dplyr::filter(Arousal_mean - Arousal_SE > 4.5) %>%
dplyr::filter(Valence_mean - Valence_SE > 4.5)
updated_cleanpospos$quad <-"High Arousal, High Valence"
updated_cleannegpos <-
updated %>%
dplyr::filter(Arousal_mean + Arousal_SE < 3) %>%
dplyr::filter(Valence_mean - Valence_SE > 4.5)
updated_cleannegpos$quad <-"Low Arousal, High Valence"
pos_stim_selection1 <-
rbind(updated_cleanpospos, updated_cleannegpos) %>%
dplyr::select(Theme, quad)
write.csv(file='../stimuli/OASIS_filteredpos.csv', pos_stim_selection1)
View(updated_cleannegpos)
View(updated)
View(updated_cleannegpos)
View(pos_stim_selection1)
